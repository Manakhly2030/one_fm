[
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Item",
  "modified": "2020-05-22 18:40:36.980697",
  "name": "Item-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Item', {\n\trefresh(frm) {\n\t\t\n\t\t//frm.trigger(\"render_barcode_template\");\n\t\t\n        frm.set_query(\"parent_item_group\", function() {\n            return {\n                filters: [\n                    ['Item Group', 'parent_item_group', '=', 'All Item Groups']\n                ]\n            };\n        });\n\n        frm.set_query(\"subitem_group\", function() {\n            return {\n                filters: [\n                    ['Item Group', 'parent_item_group', '=', cur_frm.doc.parent_item_group]\n                ]\n            };\n        });\n\n        frm.set_query(\"item_group\", function() {\n            return {\n                filters: [\n                    ['Item Group', 'parent_item_group', '=', cur_frm.doc.subitem_group]\n                ]\n            };\n        });\n\n\t},\n\t\tvalidate: function(frm){\n\n\t\t//frm.trigger(\"render_barcode_template\");\n\t\t\n\t\tfrm.set_value(\"item_barcode\", cur_frm.doc.item_code)\n\n\t\tvar final_description = \"\"\n\t\tif(cur_frm.doc.description1){\n\t\t\tfinal_description=final_description+cur_frm.doc.description1\n\t\t}\n\t\tif(cur_frm.doc.description2){\n\t\t\tfinal_description=final_description+'-'+cur_frm.doc.description2\n\t\t}\n\t\tif(cur_frm.doc.description3){\n\t\t\tfinal_description=final_description+'-'+cur_frm.doc.description3\n\t\t}\n\t\tif(cur_frm.doc.description4){\n\t\t\tfinal_description=final_description+'-'+cur_frm.doc.description4\n\t\t}\n\t\tif(cur_frm.doc.description5){\n\t\t\tfinal_description=final_description+'-'+cur_frm.doc.description5\n\t\t}\n\n\t\tfrm.set_value(\"final_description\", final_description)\n\t\tfrm.set_value(\"item_name\", final_description)\n\n\n\t},\n\tparent_item_group: function(frm) {\n    \tif(cur_frm.doc.parent_item_group){\n\t        frm.set_value('subitem_group', '');\n\t        frm.set_value('item_group', '');\n\t        get_item_code(frm);\n\t    }\n    },\n    subitem_group: function(frm) {\n    \tif(cur_frm.doc.parent_item_group){\n\t        frm.set_value('item_group', '');\n\t        get_item_code(frm);\n\t    }\n    },\n    item_group: function(frm) {\n    \tif(cur_frm.doc.parent_item_group){\n    \t\tget_item_code(frm);\n    \t}\n\n    \tif(cur_frm.doc.item_group && cur_frm.doc.subitem_group && cur_frm.doc.parent_item_group){\n\t    \tfrm.call({\n\t\t\t\tmethod: \"one_fm.utils.get_item_id_series\",\n\t\t\t\targs: {\n\t\t\t\t\t\"parent_item_group\": cur_frm.doc.parent_item_group,\n\t\t\t\t\t\"subitem_group\": cur_frm.doc.subitem_group,\n\t\t\t\t\t\"item_group\": cur_frm.doc.item_group\n\t\t\t\t},\n\t\t\t\tcallback: function(r) {\n\t\t\t\t\tif(r.message){\n\t\t\t\t\t\tconsole.log(r.message)\n\t\t\t\t\t\tvar new_item_id = String(parseInt(r.message)+1)\n\t\t\t\t\t\tconsole.log(new_item_id)\n\t\t\t\t\t\tvar final_item_id = new_item_id.padStart(4, '0')\n\t\t\t\t\t\tconsole.log(final_item_id)\n\t\t\t\t\t\tfrm.set_value(\"item_id\", final_item_id)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\n    },\n    item_id: function(frm) {\n    \tif(cur_frm.doc.item_id){\n    \t\tget_item_code(frm);\n    \t}\n    }\n    // ,\n    // render_barcode_template: function(frm) {\n    // \tvar bar_code = frappe.render_template(\"one_fm.Printing Template.bar_code.html\",{\"doc\":frm.doc});\n    //     $(frm.fields_dict[\"item_barcode_html\"].wrapper).html(bar_code);\n    //     refresh_field(\"item_barcode_html\");\n\n    //     var qr_code = frappe.render_template(\"one_fm.Printing Template.qr_code.html\",{\"doc\":frm.doc});\n    //     $(frm.fields_dict[\"item_qrcode_html\"].wrapper).html(qr_code);\n    //     refresh_field(\"item_qrcode_html\");\n    // }\n\n})\n\n\n\n\nfunction get_item_code(frm){\n\tfrm.set_value('item_code','')\n\tfrappe.call({\n\t    method: \"one_fm.utils.get_item_code\",\n\t    // doc: cur_frm.doc,\n        args: {\n            'parent_item_group': cur_frm.doc.parent_item_group,\n            'subitem_group': cur_frm.doc.subitem_group,\n            'item_group': cur_frm.doc.item_group,\n            'cur_item_id': cur_frm.doc.item_id\n        },\n\t    callback: function (r) {\n\t        if (r.message) {\n\t            // console.log(r.message)\n\t            frm.set_value('item_code', r.message)\n\t            frm.set_value('item_barcode', r.message)\n\t        }\n\t    }\n\t})\n}\n\n\n"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Stock Entry",
  "modified": "2020-05-22 16:27:03.963651",
  "name": "Stock Entry-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Stock Entry', {\n\tsupplier_purchase_order: function(frm) {\n\n        cur_frm.doc.items = []\n        frappe.model.with_doc(\"Supplier Purchase Order\", frm.doc.supplier_purchase_order, function() {\n            var tabletransfer= frappe.model.get_doc(\"Supplier Purchase Order\", frm.doc.supplier_purchase_order)\n            frm.doc.items = []\n            frm.refresh_field(\"items\");\n            $.each(tabletransfer.items, function(index, row){\n                var d = frm.add_child(\"items\");\n                d.t_warehouse = tabletransfer.place_of_delivery;\n                d.item_code = row.item_code;\n                d.description = row.item_name;\n                d.qty = row.qty;\n                d.uom = row.uom;\n                d.basic_rate = row.unit_price;\n                frm.refresh_field(\"items\");\n            });  \n        });\n\n    },\n    onload: function(frm) {\n        frm.set_query(\"supplier_purchase_order\", function() {\n            return {\n                filters: [\n                    ['Supplier Purchase Order', 'docstatus', '=', 1]\n                ]\n            }\n        });\n\n\t}\n})"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Supplier",
  "modified": "2020-05-21 18:45:54.006807",
  "name": "Supplier-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Supplier', {\n\trefresh(frm) {\n\t\t\n\n\t\tcur_frm.set_query(\"group\", \"supplier_group_table\", function(doc, cdt, cdn) {\n            var d = locals[cdt][cdn];\n            return {\n                filters: [\n                    ['Item Group', 'parent_item_group', '=', 'All Item Groups']\n                ]\n            }\n        });\n\n        cur_frm.set_query(\"subgroup\", \"supplier_group_table\", function(doc, cdt, cdn) {\n            var d = locals[cdt][cdn];\n            return {\n                filters: [\n                    ['Item Group', 'parent_item_group', '=', d.group]\n                ]\n            }\n        });\n\n\n\t},\n\tstatus: function(frm) {\n        if (frm.doc.status == 'Enable') {\n            frm.set_value(\"disabled\", 0);\n        } else {\n            frm.set_value(\"disabled\", 1);\n        }\n    }\n})"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Job Applicant",
  "modified": "2020-05-28 12:29:28.967425",
  "name": "Job Applicant-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Job Applicant', {\n\trefresh(frm) {\n\t\tfrm.set_df_property('status', 'label', 'Final Status');\n\t\tset_country_field_empty_on_load(frm);\n\t\thide_job_applicant_existing_fields(frm);\n\t\tset_read_only_fields_of_job_applicant(frm);\n\t\tset_mandatory_fields_of_job_applicant(frm);\n\t\tset_field_properties_on_agency_applying(frm);\n\t\tset_mandatory_fields_for_current_employment(frm);\n\t\t// if(frm.doc.one_fm_document_verification == 'Verified' || frm.doc.one_fm_document_verification == 'Verified - With Exception'){\n\t\t// \tfrm.set_df_property('one_fm_interview_schedules', 'hidden', false);\n\t\t// }\n\t\t// else{\n\t\tfrm.set_df_property('one_fm_interview_schedules_section', 'hidden', true);\n\t\tfrm.set_df_property('one_fm_interview_schedules', 'hidden', true);\n\t\t// }\n\t\tif(!frm.doc.__islocal){\n\t\t\tfrm.set_df_property('one_fm_erf', 'read_only', true);\n\t\t\tfrm.add_custom_button(__('Create'), function() {\n\t\t\t\tcreate_career_history(frm);\n\t\t\t}, __('Career History'));\n\t\t\tfrm.add_custom_button(__('View'), function() {\n        view_career_history(frm);\n      }, __('Career History'));\n\t\t\tfrm.add_custom_button(__('View'), function() {\n        view_interview(frm);\n      }, __('Interview'));\n\t\t\tfrm.add_custom_button(__('Create'), function() {\n\t\t\t\tcreate_interview(frm);\n\t\t\t}, __('Interview'));\n\t\t\tfrm.add_custom_button(__('Best Reference'), function() {\n        view_best_reference(frm);\n      },);\n    }\n\t},\n\tone_fm_first_name: function(frm) {\n    set_applicant_name(frm);\n  },\n\tone_fm_second_name: function(frm) {\n    set_applicant_name(frm);\n  },\n\tone_fm_third_name: function(frm) {\n    set_applicant_name(frm);\n  },\n\tone_fm_last_name: function(frm) {\n    set_applicant_name(frm);\n  },\n\tjob_title: function(frm) {\n\t\tset_job_opening_to_applicant(frm);\n\t},\n\tone_fm_erf: function(frm) {\n\t\tset_erf_to_applicant(frm);\n\t},\n\tone_fm_source_of_hire: function(frm) {\n\t\tset_have_visa_field_properties(frm);\n\t\tset_required_documents(frm);\n\t\tif(frm.doc.one_fm_source_of_hire == 'One FM'){\n\t\t\tfrm.set_value('one_fm_agency', '');\n\t\t\tfrm.set_value('one_fm_is_agency_applying', false);\n\t\t}\n\t\tset_field_properties_on_agency_applying(frm)\n\t},\n\tone_fm_visa_type: function(frm) {\n\t\tset_required_documents(frm);\n\t},\n\tone_fm_i_am_currently_working: function(frm) {\n\t\tset_mandatory_fields_for_current_employment(frm);\n\t},\n\tone_fm_gender: function(frm) {\n\t\tset_height_field_property_from_gender(frm);\n\t},\n\tone_fm_email_id: function(frm) {\n\t\tset_job_applicant_email_id(frm);\n\t},\n\tone_fm_have_a_valid_visa_in_kuwait: function(frm) {\n\t\tset_visa_type_field_properties(frm);\n\t\tset_cid_field_properties(frm);\n\t\tif(!frm.doc.one_fm_have_a_valid_visa_in_kuwait){\n\t\t\tfrm.set_value('one_fm_in_kuwait_at_present', false);\n\t\t}\n\t},\n\tone_fm_agency: function(frm) {\n\t\tif(frm.doc.one_fm_agency){\n\t\t\tfrm.set_value('one_fm_is_agency_applying', true);\n\t\t}\n\t\telse{\n\t\t\tfrm.set_value('one_fm_is_agency_applying', false);\n\t\t}\n\t},\n\tone_fm_is_agency_applying: function(frm) {\n\t\tset_field_properties_on_agency_applying(frm);\n\t},\n\tone_fm_cid_number: function(frm) {\n\t\tvalidate_cid(frm);\n\t},\n\tone_fm_date_of_birth: function(frm) {\n\t\tvalidate_cid(frm);\n\t\tvalidate_min_age(frm);\n\t},\n\tone_fm_height: function(frm) {\n\t\tvalidate_height_range(frm);\n\t},\n\tone_fm_passport_issued: function(frm) {\n\t\tvalidate_passport_date(frm);\n\t},\n\tone_fm_passport_expire: function(frm) {\n\t\tvalidate_passport_date(frm);\n\t},\n\tone_fm_employment_start_date: function(frm) {\n\t\tvalidate_employment_date(frm);\n\t},\n\tone_fm_employment_end_date: function(frm) {\n\t\tvalidate_employment_date(frm);\n\t},\n\tone_fm_notice_period_in_days: function(frm) {\n\t\tif(frm.doc.one_fm_i_am_currently_working && (frm.doc.one_fm_notice_period_in_days > 120)){\n\t\t\tfrm.set_value('one_fm_notice_period_in_days', '');\n\t\t\tfrappe.throw(__(\"We are not looking for a Job Applicant having notice period greater than 120 Days\"));\n\t\t}\n\t},\n\tone_fm_applicant_is_overseas_or_local: function(frm) {\n\t\tif(frm.doc.one_fm_applicant_is_overseas_or_local){\n\t\t\tlet msg = __('Do You Need to Set the Value to {0}', [frm.doc.one_fm_applicant_is_overseas_or_local])\n\t\t\tfrappe.confirm(\n\t\t\t\tmsg,\n\t\t\t\tfunction(){}, // Yes\n\t\t\t\tfunction(){\n\t\t\t\t\t// No\n\t\t\t\t\tfrm.set_value('one_fm_applicant_is_overseas_or_local', '');\n\t\t\t\t}\n\t\t\t);\n\t\t\tif(frm.doc.one_fm_applicant_is_overseas_or_local == 'Overseas'){\n\t\t\t\tfrm.set_value('one_fm_is_transferable', '');\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tfrm.set_value('one_fm_is_transferable', '');\n\t\t}\n\t},\n\tone_fm_is_transferable: function(frm) {\n\t\tif(frm.doc.one_fm_is_transferable){\n\t\t\tlet msg = __('Do You Need to Set the Value to {0}', [frm.doc.one_fm_is_transferable])\n\t\t\tfrappe.confirm(\n\t\t\t\tmsg,\n\t\t\t\tfunction(){\n\t\t\t\t\t// Yes\n\t\t\t\t\tif(frm.doc.one_fm_is_transferable == 'No'){\n\t\t\t\t\t\tfrappe.msgprint(__('If Applicant is Not Transferable the Applicant Will be Rejected.'));\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction(){\n\t\t\t\t\t// No\n\t\t\t\t\tfrm.set_value('one_fm_is_transferable', '');\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t}\n});\n\nfrappe.ui.form.on('Job Applicant Required Document', {\n\tattach: function(frm, cdt, cdn){\n    var child = locals[cdt][cdn];\n\t\tif(child.attach){\n\t\t\tfrappe.model.set_value(child.doctype, child.name, 'received', true);\n\t\t}\n\t\telse{\n\t\t\tfrappe.model.set_value(child.doctype, child.name, 'received', false);\n\t\t}\n  },\n\treceived: function(frm, cdt, cdn) {\n\t\tvar child = locals[cdt][cdn];\n\t\tif(child.received && !child.attach){\n\t\t\tfrappe.model.set_value(child.doctype, child.name, 'received', false);\n\t\t\tfrappe.throw(__(\"Can not marked as received without attachment.\"));\n\t\t}\n\t}\n});\n\nfrappe.ui.form.on('Job Applicant Interview Schedule', {\n\taction: function(frm, cdt, cdn) {\n\t\tif(frm.is_dirty()){\n\t\t\tfrappe.msgprint(__('Please Save the Document for Further Action'));\n\t\t}\n\t\telse{\n\t\t\tvar child = locals[cdt][cdn];\n\t\t\tfrappe.route_options = {\n\t\t\t\t\"job_applicant\": frm.doc.name,\n\t\t\t\t\"interview_type\": child.interview_type,\n\t\t\t\t\"interview_scheduled_date\": child.scheduled_on,\n\t\t\t\t\"interview_schedule\": child.name\n\t\t\t};\n\t\t\tfrappe.new_doc(\"Interview Result\");\n\t\t}\n\t}\n});\n\nvar validate_employment_date = function(frm) {\n\tif(frm.doc.one_fm_i_am_currently_working && (frm.doc.one_fm_employment_end_date < frm.doc.one_fm_employment_start_date)){\n\t\tfrm.set_value('one_fm_employment_start_date', '');\n\t\tfrappe.throw(__(\"Employment End Date cannot be before Employment Start Date\"));\n\t}\n};\n\nvar validate_passport_date = function(frm) {\n\tif(frm.doc.one_fm_passport_expire < frm.doc.one_fm_passport_issued){\n\t\tfrm.set_value('one_fm_passport_expire', '');\n\t\tfrappe.throw(__(\"Passport Expires on Date cannot be before Passport Issued on Date\"));\n\t}\n};\n\nvar validate_height_range = function(frm) {\n\tif(frm.doc.one_fm_height && frm.doc.one_fm_height <= 10){\n\t\tfrm.set_value('one_fm_height', '');\n\t\tfrappe.throw(__('Hieght Must be greter than 10cm.'));\n\t}\n};\n\nvar validate_min_age = function(frm) {\n\tvar minimum_age_required = 18;\n\tif(frm.doc.one_fm_erf && frm.doc.one_fm_gender){\n\t\tfrappe.call({\n\t\t\tmethod: 'frappe.client.get',\n\t\t\targs: {doctype: 'ERF', filters:{name: frm.doc.one_fm_erf}},\n\t\t\tcallback: function(r) {\n\t\t\t\tif(r& r.message && r.message.gender_height_requirement){\n\t\t\t\t\tvar items = r.message.gender_height_requirement;\n\t\t\t\t\titems.forEach((item, i) => {\n\t\t\t\t\t\tif(item.gender == frm.doc.one_fm_gender && item.minimum_age > 0){\n\t\t\t\t\t\t\tminimum_age_required = minimum_age;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tvalidate_date_of_birth(frm, minimum_age_required);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\telse{\n\t\tvalidate_date_of_birth(frm, minimum_age_required);\n\t}\n};\n\nvar create_interview = function(frm) {\n  frappe.route_options = {\"job_applicant\": frm.doc.name};\n\tfrappe.new_doc(\"Interview Result\");\n};\n\nvar view_interview = function(frm) {\n\tfrappe.route_options = {\"job_applicant\": frm.doc.name};\n\tfrappe.set_route(\"List\", \"Interview Result\");\n};\n\nvar create_career_history = function(frm) {\n  frappe.route_options = {\"job_applicant\": frm.doc.name};\n\tfrappe.new_doc(\"Career History\");\n};\n\nvar view_best_reference = function(frm) {\n  frappe.route_options = {\"job_applicant\": frm.doc.name};\n\tfrappe.set_route(\"List\", \"Best Reference\");\n};\n\nvar view_career_history = function(frm) {\n\tfrappe.route_options = {\"job_applicant\": frm.doc.name};\n\tfrappe.set_route(\"List\", \"Career History\");\n};\n\nvar validate_date_of_birth = function(frm, minimum_age_required) {\n\tif(frm.doc.one_fm_date_of_birth){\n\t\tlet today = frappe.datetime.get_today()\n\t\t// Add minimum_age_required*12 Months to DOB to get date after 15 years\n\t\tlet dob_present = frappe.datetime.add_months(frm.doc.one_fm_date_of_birth, minimum_age_required*12)\n\t\t// If today >= dob_present, then age is more than minimum_age_required years\n\t\tif(today < dob_present){\n\t\t\tfrm.set_value('one_fm_date_of_birth', '');\n\t\t\tif(minimum_age_required == 18){\n\t\t\t\tfrappe.throw(__(\"We Love to Work With Young Geniuses, Its Not Legal Though.\"));\n\t\t\t}\n\t\t\telse{\n\t\t\t\tfrappe.throw(__(\"Minimum Age Should be {0} Years\", [minimum_age_required]));\n\t\t\t}\n\t\t}\n\t}\n};\n\nvar validate_cid = function(frm) {\n\tif(frm.doc.one_fm_cid_number){\n\t\tvar valid_cid = true;\n\t\tif(frm.doc.one_fm_cid_number.length != 12 || !isNumeric(frm.doc.one_fm_cid_number)){\n\t\t\tvalid_cid = false;\n\t\t}\n\t\telse if (frm.doc.one_fm_date_of_birth){\n\t\t\tif(!is_dob_include_in_cid(frm.doc.one_fm_cid_number, frm.doc.one_fm_date_of_birth)){\n\t\t\t\tvalid_cid = false;\n\t\t\t}\n\t\t}\n\t\tif(!valid_cid){\n\t\t\tfrm.set_value('one_fm_cid_number', '');\n\t\t\tfrappe.throw(__(\"Please Enter a Valid Civil ID.\"));\n\t\t}\n\t}\n\tfunction isNumeric(num){\n\t  return !isNaN(num)\n\t}\n};\n\nvar is_dob_include_in_cid = function(cid, dob) {\n\tlet\tdate_ms = Date.parse(dob);\n\tlet\tdate_obj = new Date();\n\tdate_obj.setTime(date_ms);\n\tlet\tyear = date_obj.getFullYear();\n\tlet month = date_obj.getMonth()+1;\n\tlet day = date_obj.getDate();\n\tif(month < 10){\n\t\tmonth = '0'+month.toString();\n\t}\n\telse{\n\t\tmonth = month.toString();\n\t}\n\tif(day < 10){\n\t\tday = '0'+day.toString();\n\t}\n\telse{\n\t\tday = day.toString();\n\t}\n\tyear = year.toString().slice(-2);\n\tlet date_string = day+month+year;\n\treturn cid.includes(date_string);\n};\n\nvar set_field_properties_on_agency_applying = function(frm) {\n\t// On Contact Section\n\tlet fields = ['one_fm_contact_number'];\n\tlet hide_fields = ['one_fm_contact_number', 'one_fm_secondary_contact_number', 'one_fm_country_code', 'one_fm_country_code_second'];\n\tif(frm.doc.one_fm_agency && frm.doc.one_fm_is_agency_applying){\n\t\tset_mandatory_fields(frm, fields, false);\n\t\tset_hidden_fields(frm, hide_fields, true);\n\t\t// frm.set_df_property('one_fm_contact_details_section', 'hidden', true);\n\t}\n\telse{\n\t\tset_hidden_fields(frm, hide_fields, false);\n\t\t// frm.set_df_property('one_fm_contact_details_section', 'hidden', false);\n\t\tset_mandatory_fields(frm, fields, true);\n\t}\n\n\t// On Work Details Section\n\tif(frm.doc.one_fm_is_agency_applying){\n\t\tfrm.set_df_property('one_fm_work_details_section', 'hidden', true);\n\t\tlet fields = ['one_fm_rotation_shift', 'one_fm_night_shift', 'one_fm_type_of_travel', 'one_fm_type_of_driving_license'];\n\t\tset_mandatory_fields(frm, fields, false);\n\t}\n\telse{\n\t\tif(frm.doc.one_fm_erf){\n\t\t\tfrappe.call({\n\t\t\t\tmethod: 'frappe.client.get',\n\t\t\t\targs: {doctype: 'ERF', filters:{name: frm.doc.one_fm_erf}},\n\t\t\t\tcallback: function(r) {\n\t\t\t\t\tif(r.message){\n\t\t\t\t\t\tvar erf = r.message;\n\t\t\t\t\t\tset_work_details_section(frm, erf);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n};\n\nvar set_cid_field_properties = function(frm) {\n\tif(frm.doc.one_fm_have_a_valid_visa_in_kuwait){\n\t\tfrm.set_df_property('one_fm_cid_number', 'reqd', true);\n\t\tfrm.set_df_property('one_fm_cid_expire', 'reqd', true);\n\t}\n\telse{\n\t\tfrm.set_df_property('one_fm_cid_number', 'reqd', false);\n\t\tfrm.set_df_property('one_fm_cid_expire', 'reqd', false);\n\t}\n};\n\nvar set_have_visa_field_properties = function(frm) {\n\tif(frm.doc.one_fm_source_of_hire == 'Local'){\n\t\tfrm.set_value('one_fm_have_a_valid_visa_in_kuwait', true);\n\t}\n};\n\nvar set_visa_type_field_properties = function(frm) {\n\tif(frm.doc.one_fm_have_a_valid_visa_in_kuwait){\n\t\tfrm.set_df_property('one_fm_visa_type', 'reqd', true);\n\t}\n\telse{\n\t\tfrm.set_df_property('one_fm_visa_type', 'reqd', false);\n\t}\n};\n\nvar set_job_applicant_email_id = function(frm) {\n\tif(frm.doc.one_fm_email_id){\n\t\tfrm.set_value('email_id', frm.doc.one_fm_email_id);\n\t}\n\telse{\n\t\tfrm.set_value('email_id', '');\n\t}\n};\n\nvar set_height_field_property_from_gender = function(frm) {\n\tif(frm.doc.one_fm_erf && frm.doc.one_fm_gender){\n\t\tfrappe.call({\n\t\t\tmethod: 'frappe.client.get',\n\t\t\targs: {\n\t\t\t\tdoctype: 'ERF',\n\t\t\t\tfilters: {name: frm.doc.one_fm_erf}\n\t\t\t},\n\t\t\tcallback: function(r){\n\t\t\t\tlet show_height_field = false;\n\t\t\t\tlet mandatory_height_field = false;\n\t\t\t\tif(r.message && r.message.gender_height_requirement){\n\t\t\t\t\tlet height_details = r.message.gender_height_requirement;\n\t\t\t\t\theight_details.forEach((item) => {\n\t\t\t\t\t\tif(item.gender == frm.doc.one_fm_gender && item.height > 0){\n\t\t\t\t\t\t\tshow_height_field = true;\n\t\t\t\t\t\t\tif(item.is_height_mandatory){\n\t\t\t\t\t\t\t\tmandatory_height_field = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tfrm.set_df_property('one_fm_height', 'hidden', show_height_field?false:true);\n\t\t\t\tfrm.set_df_property('one_fm_height', 'reqd', mandatory_height_field?true:false);\n\t\t\t}\n\t\t});\n\t}\n\telse{\n\t\tfrm.set_df_property('one_fm_height', 'hidden', true);\n\t\tfrm.set_df_property('one_fm_height', 'reqd', false);\n\t}\n};\n\nvar set_mandatory_fields_for_current_employment = function(frm) {\n\tlet fields = ['one_fm_current_employer', 'one_fm_employment_start_date', 'one_fm_employment_end_date',\n\t\t'one_fm_current_job_title', 'one_fm_country_of_employment', 'one_fm_notice_period_in_days', 'one_fm_current_salary'];\n\tif(frm.doc.one_fm_i_am_currently_working){\n\t\tset_mandatory_fields(frm, fields, true);\n\t}\n\telse{\n\t\tset_mandatory_fields(frm, fields, false);\n\t}\n};\n\nvar set_mandatory_fields = function(frm, fields, reqd) {\n\tfields.forEach((field) => {\n\t\tfrm.set_df_property(field, 'reqd', reqd);\n\t});\n};\n\nvar set_read_only_fields_of_job_applicant = function(frm) {\n\tlet fields = ['status', 'one_fm_applicant_status', 'one_fm_application_id', 'job_title'];\n\tset_read_only_fields(frm, fields, true);\n};\n\nvar set_read_only_fields = function(frm, fields, read_only) {\n\tfields.forEach((field) => {\n\t\tfrm.set_df_property(field, 'read_only', read_only);\n\t});\n};\n\nvar set_mandatory_fields_of_job_applicant = function(frm) {\n\tlet fields = ['one_fm_last_name', 'one_fm_first_name', 'one_fm_passport_number', 'one_fm_place_of_birth', 'one_fm_email_id',\n\t\t'one_fm_marital_status', 'one_fm_passport_holder_of', 'one_fm_passport_issued', 'one_fm_passport_expire',\n\t\t'one_fm_gender', 'one_fm_religion', 'one_fm_date_of_birth', 'one_fm_educational_qualification', 'one_fm_university'];\n\tset_mandatory_fields(frm, fields, true);\n};\n\nvar set_country_field_empty_on_load = function(frm) {\n\tlet fields = ['one_fm_passport_holder_of', 'one_fm_country_of_employment'];\n\tif(frm.doc.__islocal){\n\t\tfields.forEach((field) => {\n\t\t\tfrm.set_value(field, '');\n\t\t});\n\t}\n};\n\nvar hide_job_applicant_existing_fields = function(frm) {\n\tlet fields = ['applicant_name', 'email_id', 'cover_letter', 'resume_attachment', 'section_break_6', 'one_fm_height'];\n\tset_hidden_fields(frm, fields, true);\n};\n\nvar set_hidden_fields = function(frm, fields, hidden) {\n\tfields.forEach((field) => {\n\t\tfrm.set_df_property(field, 'hidden', hidden);\n\t});\n};\n\nvar set_required_documents = function(frm) {\n\tfrm.clear_table('one_fm_documents_required');\n\tlet filters = {};\n\tif(frm.doc.one_fm_source_of_hire){\n    let source_of_hire = 'Overseas';\n    if(frm.doc.one_fm_source_of_hire == 'Local'){\n\t\t\tsource_of_hire = 'Local';\n\t\t}\n    else if(frm.doc.one_fm_source_of_hire == 'Local and Overseas' && frm.doc.one_fm_have_a_valid_visa_in_kuwait && frm.doc.one_fm_visa_type){\n\t\t\tsource_of_hire = 'Local';\n\t\t}\n    filters['source_of_hire'] = source_of_hire;\n    if (source_of_hire == 'Local' && frm.doc.one_fm_visa_type){\n\t\t\tfilters['visa_type'] = frm.doc.one_fm_visa_type;\n\t\t}\n    else{\n\t\t\tfilters['visa_type'] = '';\n\t\t}\n\n\t\tfrappe.call({\n\t\t\tmethod: 'one_fm.one_fm.doctype.recruitment_document_checklist.recruitment_document_checklist.get_recruitment_document_checklist',\n\t\t\targs: {filters: filters},\n\t\t\tcallback: function(r) {\n\t\t\t\tfrm.clear_table('one_fm_documents_required');\n\t\t\t\tif(r.message && r.message.recruitment_documents){\n\t\t\t\t\tvar document_checklist = r.message.recruitment_documents;\n\t\t\t\t\tdocument_checklist.forEach((checklist) => {\n\t\t\t\t\t\tlet doc_required = frappe.model.add_child(frm.doc, 'Job Applicant Required Document', 'one_fm_documents_required');\n\t\t\t\t\t\tlet fields = ['document_required', 'required_when', 'or_required_when', 'type_of_copy', 'or_type_of_copy',\n\t\t\t\t\t\t\t'not_mandatory']\n\t\t\t\t\t\tfields.forEach((field) => {\n\t\t\t\t\t\t\tfrappe.model.set_value(doc_required.doctype, doc_required.name, field, checklist[field]);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tfrm.refresh_field('one_fm_documents_required');\n\t\t\t}\n\t\t});\n\t}\n\tfrm.refresh_field('one_fm_documents_required');\n};\n\nvar set_erf_to_applicant = function(frm) {\n\tif(frm.doc.one_fm_erf){\n\t\tfrappe.call({\n\t\t\tmethod: 'frappe.client.get',\n\t\t\targs: {\n\t\t\t\tdoctype: 'ERF',\n\t\t\t\tfilters: {'name': frm.doc.one_fm_erf}\n\t\t\t},\n\t\t\tcallback: function(r) {\n\t\t\t\tif(r.message){\n\t\t\t\t\tvar erf = r.message;\n\t\t\t\t\tset_uniform_fields(frm, erf);\n\t\t\t\t\tset_job_opening_form_erf(frm, erf);\n\t\t\t\t\tset_erf_basic_details(frm, erf);\n\t\t\t\t\tset_work_details_section(frm, erf);\n\t\t\t\t\tvalidate_date_of_birth(frm, erf.minimum_age_required);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n};\n\nvar set_uniform_fields = function(frm, erf) {\n\tfrm.set_value('one_fm_is_uniform_needed_for_this_job', erf.is_uniform_needed_for_this_job);\n};\n\nvar set_job_opening_form_erf = function(frm, erf) {\n\tif(!frm.doc.job_title){\n\t\tfrappe.call({\n\t\t\tmethod: 'frappe.client.get_value',\n\t\t\targs: {\n\t\t\t\tdoctype: 'Job Opening',\n\t\t\t\tfieldname: 'name',\n\t\t\t\tfilters: {one_fm_erf: erf.name}\n\t\t\t},\n\t\t\tcallback: function(r) {\n\t\t\t\tif(r.message && r.message.name && !frm.doc.job_title){\n\t\t\t\t\tfrm.set_value('job_title', r.message.name)\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n};\n\nvar set_work_details_section = function(frm, erf) {\n\tif(!frm.doc.one_fm_is_agency_applying){\n\t\tfrm.set_df_property('one_fm_work_details_section', 'hidden', false);\n\t\tfrm.set_df_property('one_fm_rotation_shift', 'reqd', erf.shift_working);\n\t\tfrm.set_df_property('one_fm_rotation_shift', 'hidden', !erf.shift_working);\n\t\tfrm.set_df_property('one_fm_night_shift', 'reqd', erf.night_shift);\n\t\tfrm.set_df_property('one_fm_night_shift', 'hidden', !erf.night_shift);\n\t\tfrm.set_df_property('one_fm_type_of_travel', 'reqd', erf.travel_required);\n\t\tfrm.set_df_property('one_fm_type_of_travel', 'hidden', !erf.travel_required);\n\t\tif(erf.travel_required && erf.type_of_travel){\n\t\t\tlet options = ['I Will Travel '+erf.type_of_travel, 'I Cant Travel '+erf.type_of_travel];\n\t\t\tfrm.set_df_property('one_fm_type_of_travel', 'options', options)\n\t\t}\n\t\tfrm.set_df_property('one_fm_type_of_driving_license', 'reqd', erf.driving_license_required);\n\t\tfrm.set_df_property('one_fm_type_of_driving_license', 'hidden', !erf.driving_license_required);\n\t}\n};\n\nvar set_erf_basic_details = function(frm, erf) {\n\tfrm.set_value('one_fm_hiring_method', erf.hiring_method);\n};\n\nvar set_job_opening_to_applicant = function(frm) {\n\tif(frm.doc.job_title){\n\t\tfrappe.call({\n\t\t\tmethod: 'frappe.client.get',\n\t\t\targs: {\n\t\t\t\tdoctype: 'Job Opening',\n\t\t\t\tfilters: {'name': frm.doc.job_title}\n\t\t\t},\n\t\t\tcallback: function(r) {\n\t\t\t\tif(r.message){\n\t\t\t\t\tvar job = r.message;\n\t\t\t\t\tfrm.set_df_property('one_fm_erf', 'read_only', true);\n\t\t\t\t\tvar fields = ['one_fm_erf', 'one_fm_source_of_hire', 'one_fm_sourcing_team']\n\t\t\t\t\tfields.forEach((field) => {\n\t\t\t\t\t\tfrm.set_value(field, job[field]?job[field]:'');\n\t\t\t\t\t});\n\t\t\t\t\tset_job_basic_skill(frm, job);\n\t\t\t\t\tset_job_languages(frm, job);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n};\n\nvar set_job_languages = function(frm, job) {\n\tif(job.one_fm_languages && job.one_fm_languages.length > 0){\n\t\tset_languages(frm, job.one_fm_languages);\n\t}\n\telse if(frm.doc.one_fm_erf) {\n\t\tfrappe.call({\n\t\t\tmethod: 'frappe.client.get',\n\t\t\targs: {doctype: 'ERF', filters: {name:frm.doc.one_fm_erf}},\n\t\t\tcallback: function(r) {\n\t\t\t\tif(r.message && r.message.languages){\n\t\t\t\t\tset_languages(frm, r.message.languages);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n};\n\nvar set_languages = function(frm, languages) {\n\t// frappe.meta.get_docfield(\"Employee Language Requirement\", 'language', frm.doc.name).read_only = 1;\n\tlanguages.forEach(function(language) {\n\t\tlet lang = frappe.model.add_child(frm.doc, 'Employee Language Requirement', 'one_fm_languages');\n\t\tfrappe.model.set_value(lang.doctype, lang.name, 'language', language.language);\n\t\tfrappe.model.set_value(lang.doctype, lang.name, 'language_name', language.language_name);\n\t});\n\tfrm.refresh_field('one_fm_languages');\n};\n\nvar set_job_basic_skill = function(frm, job) {\n\tif(job.one_fm_designation_skill && job.one_fm_designation_skill.length > 0){\n\t\tset_designation_skill(frm, job.one_fm_designation_skill);\n\t}\n\telse if(frm.doc.one_fm_erf) {\n\t\tfrappe.call({\n\t\t\tmethod: 'frappe.client.get',\n\t\t\targs: {doctype: 'ERF', filters: {name:frm.doc.one_fm_erf}},\n\t\t\tcallback: function(r) {\n\t\t\t\tif(r.message && r.message.designation_skill){\n\t\t\t\t\tset_designation_skill(frm, r.message.designation_skill);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n};\n\nvar set_designation_skill = function(frm, skills) {\n\t// frappe.meta.get_docfield(\"Designation Skill\", 'skill', frm.doc.name).read_only = 1;\n\tskills.forEach(function(designation_skill) {\n\t\tlet skill = frappe.model.add_child(frm.doc, 'Designation Skill', 'one_fm_designation_skill');\n\t\tfrappe.model.set_value(skill.doctype, skill.name, 'skill', designation_skill.skill);\n\t});\n\tfrm.refresh_field('one_fm_designation_skill');\n};\n\nvar set_applicant_name = function(frm) {\n  let name_fields = ['one_fm_second_name', 'one_fm_third_name', 'one_fm_last_name']\n  let applicant_name = frm.doc.one_fm_first_name ?frm.doc.one_fm_first_name:'';\n  name_fields.forEach((name_field) => {\n    if(frm.doc[name_field]){\n      applicant_name += ' '+frm.doc[name_field]\n    }\n  });\n  frm.set_value('applicant_name', applicant_name);\n};\n"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Job Opening",
  "modified": "2020-05-13 08:29:33.400820",
  "name": "Job Opening-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Job Opening', {\n  refresh(frm) {\n    set_my_dash_board(frm);\n    frm.set_query('agency', 'one_fm_active_willing_agency', function(doc) {\n      return {\n        filters: {\n          'active': true\n        }\n      }\n    });\n  },\n  one_fm_job_post_valid_till: function(frm) {\n    validate_date(frm);\n  }\n});\n\nvar validate_date = function(frm) {\n\tif(frm.doc.one_fm_job_post_valid_till < frm.doc.one_fm_job_opening_created){\n\t\tfrappe.throw(__(\"Job Post Valid Till Date cannot be before Job Opening Created Date\"));\n\t}\n\tif(frm.doc.one_fm_job_post_valid_till < frappe.datetime.now_date()){\n\t\tfrappe.throw(__(\"Job Post Valid Till Date cannot be before Today\"));\n\t}\n};\n\nvar set_my_dash_board = function(frm) {\n\tdashboard_link_doctype(frm, \"Note\");\n\n\t// Hide + button\n\tif(frm.doc.disabled){\n\t\t\tlet db_btns = $('.form-dashboard-wrapper').find('.btn-new').find('.btn-new');\n\t\t\t$.each(db_btns.prevObject, function(i, d) {\n\t\t\t\t\t$(d).hide();\n\t\t\t});\n\t}\n};\n\nvar dashboard_link_doctype = function (frm, doctype){\n\tvar parent = $('.form-dashboard-wrapper [data-doctype=\"Job Applicant\"]').closest('div').parent();\n\tparent.find('[data-doctype=\"'+doctype+'\"]').remove();\n\tparent.append(frappe.render_template(\"dashboard_link_doctype\", {doctype:doctype}));\n\tvar self = parent.find('[data-doctype=\"'+doctype+'\"]');\n\t// set_open_count(frm, doctype);\n\n\t// bind links\n\tself.find(\".badge-link\").on('click', function() {\n\t\tfrappe.route_options = {\"one_fm_job_opening\": frm.doc.name};\n\t\tfrappe.set_route(\"List\", doctype);\n\t});\n\n\t// bind open notifications\n\tself.find('.open-notification').on('click', function() {\n\t\tfrappe.route_options = {\n\t\t\t\"one_fm_job_opening\": frm.doc.name\n\t\t};\n\t\tfrappe.set_route(\"List\", doctype);\n\t});\n\n\t// bind new\n\tif(frappe.model.can_create(doctype)) {\n\t\tself.find('.btn-new').removeClass('hidden');\n\t}\n\tself.find('.btn-new').on('click', function() {\n\t\tfrappe.new_doc(doctype,{\n\t\t\t\"one_fm_job_opening\": frm.doc.name\n\t\t});\n\t});\n};\nfrappe.templates[\"dashboard_link_doctype\"] = ' \\\n<div class=\"document-link\" data-doctype=\"{{ doctype }}\"> \\\n<a class=\"badge-link small\">{{ __(doctype) }}</a> \\\n<span class=\"text-muted small count\"></span> \\\n<span class=\"open-notification hidden\" title=\"{{ __(\"List {0}\", [__(doctype)])}}\"></span> \\\n<button class=\"btn btn-new btn-default btn-xs hidden\" data-doctype=\"{{ doctype }}\"> \\\n<i class=\"octicon octicon-plus\" style=\"font-size: 12px;\"></i> \\\n</button>\\\n</div>';\n"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Job Offer",
  "modified": "2020-05-14 13:33:03.323303",
  "name": "Job Offer-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Job Offer', {\n  refresh(frm) {\n    if(frm.is_new()){\n      frm.set_value('offer_date', frappe.datetime.now_date());\n    }\n  },\n  job_applicant: function(frm) {\n    set_job_applicant_details(frm);\n  }\n});\n\nvar set_job_applicant_details = function(frm) {\n  if(frm.doc.job_applicant){\n    frappe.db.get_value('Job Applicant', frm.doc.job_applicant, 'one_fm_erf', function(r) {\n      if(r && r.one_fm_erf){\n        frappe.call({\n          method: 'frappe.client.get',\n          args: {\n            doctype: 'ERF',\n            filters: {'name': r.one_fm_erf}\n          },\n          callback: function(ret) {\n            if(ret && ret.message){\n              var erf = ret.message;\n              set_erf_details(frm, erf);\n            }\n          }\n        });\n      }\n    });\n  }\n};\n\nvar set_erf_details = function(frm, erf) {\n  frm.set_value('designation', erf.designation);\n  set_salary_details(frm, erf);\n  set_other_benefits_to_terms(frm, erf);\n};\n\nvar set_salary_details = function(frm, erf) {\n  frm.clear_table('one_fm_salary_details');\n  let total_amount = 0;\n  if(erf.salary_details){\n    erf.salary_details.forEach((item, i) => {\n      total_amount += item.amount;\n      let salary = frappe.model.add_child(frm.doc, 'ERF Salary Detail', 'one_fm_salary_details');\n      frappe.model.set_value(salary.doctype, salary.name, 'salary_component', item.salary_component);\n      frappe.model.set_value(salary.doctype, salary.name, 'amount', item.amount);\n    });\n  }\n  frm.set_value('one_fm_job_offer_total_salary', total_amount);\n  frm.refresh_field('one_fm_salary_details');\n};\n\nvar set_other_benefits_to_terms = function(frm, erf) {\n  var terms_list = [];\n  if(erf.other_benefits){\n    erf.other_benefits.forEach((item) => {\n      terms_list.push({'offer_term': item.benefit, 'value': 'Company Provided'});\n    });\n  }\n  var terms = ['Kuwait Visa processing Fees', 'Kuwait Residency Fees', 'Kuwait insurance Fees']\n  terms.forEach((item) => {\n    terms_list.push({'offer_term': item, 'value': 'Borne By The Company'});\n  });\n  var hours = erf.shift_hours?erf.shift_hours:9;\n  let vacation_days = erf.vacation_days?erf.vacation_days:30;\n  terms_list.push({'offer_term': 'Working Hours', 'value': hours+' hours a day, (Subject to Operational Requirements) from Sunday to Thursday'});\n  terms_list.push({'offer_term': 'Annual Leave', 'value': '('+vacation_days+') days paid leave, as per Kuwait Labor Law (Private Sector)'});\n  terms_list.push({'offer_term': 'Probation Period', 'value': '(100) working days'});\n  set_offer_terms(frm, terms_list);\n};\n\nvar set_offer_terms = function(frm, terms_list) {\n  frm.clear_table('offer_terms');\n  terms_list.forEach((item) => {\n    let offer_term = frappe.model.add_child(frm.doc, 'Job Offer Term', 'offer_terms');\n    frappe.model.set_value(offer_term.doctype, offer_term.name, 'offer_term', item['offer_term']);\n    frappe.model.set_value(offer_term.doctype, offer_term.name, 'value', item['value']);\n  });\n  frm.refresh_field('offer_terms');\n}\n"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Warehouse",
  "modified": "2020-05-21 20:37:23.759355",
  "name": "Warehouse-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Warehouse', {\n\tstatus: function(frm) {\n        if (frm.doc.status == 'Enable') {\n            frm.set_value(\"disabled\", 0);\n        } else {\n            frm.set_value(\"disabled\", 1);\n        }\n    }\n})"
 }
]